{"ast":null,"code":"import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from '../../config/fbconfig';\nvar rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer\n});\nexport var middleware = compose(applyMiddleware(logger, thunkMiddleware.withExtraArgument({\n  getFirebase: getFirebase,\n  getFirestore: getFirestore\n})), reduxFirestore(fbConfig), reactReduxFirebase(fbConfig)); //compose allows us to add more store reducer (middleware) to our redux store in order to connect our firebase app to our app, the configuration\n//of our firebase is passed to both reduxFirestore and reactReduxFirebase in order for the {getFirebase, getFirestore }in our action to know to connect to that specific app\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/hamadoudiallo/Desktop/NewProject/Perso360tekblog/perso360/src/store/reducers/rootReducer.js"],"names":["authReducer","projectReducer","combineReducers","applyMiddleware","compose","thunkMiddleware","logger","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","fbConfig","rootReducer","auth","project","middleware","withExtraArgument"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,QAAyD,OAAzD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,iBAA3C;AACA,SAAQC,kBAAR,EAA4BC,WAA5B,QAA8C,sBAA9C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,IAAMC,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,IAAI,EAAEb,WAD4B;AAElCc,EAAAA,OAAO,EAAEb;AAFyB,CAAD,CAAnC;AAIA,OAAO,IAAMc,UAAU,GAAGX,OAAO,CAC/BD,eAAe,CAACG,MAAD,EACfD,eAAe,CAACW,iBAAhB,CAAkC;AAACN,EAAAA,WAAW,EAAXA,WAAD;AAAcF,EAAAA,YAAY,EAAZA;AAAd,CAAlC,CADe,CADgB,EAG/BD,cAAc,CAACI,QAAD,CAHiB,EAI/BF,kBAAkB,CAACE,QAAD,CAJa,CAA1B,C,CAOP;AACA;;AAGA,eAAeC,WAAf","sourcesContent":["import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport logger from 'redux-logger'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from '../../config/fbconfig'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer\n})\nexport const middleware = compose(\n  applyMiddleware(logger, \n  thunkMiddleware.withExtraArgument({getFirebase, getFirestore})),\n  reduxFirestore(fbConfig),\n  reactReduxFirebase(fbConfig)\n  )\n\n//compose allows us to add more store reducer (middleware) to our redux store in order to connect our firebase app to our app, the configuration\n//of our firebase is passed to both reduxFirestore and reactReduxFirebase in order for the {getFirebase, getFirestore }in our action to know to connect to that specific app\n\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}